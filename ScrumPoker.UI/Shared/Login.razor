@page "/login"
@using ScrumPoker.Model.Model
@using ScrumPoker.Model.Enums
@using ScrumPoker.Model
@inject Services.IRoomService roomService
@inject ISessionStorageService sessionStorage
@inject NavigationManager navigationManager

<div class="container w-50">
    <div class="card">
        <div class="card-body">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label text-right font-weight-bold">Room Name:</label>
                <div class="col-sm-9">
                    <div class="input-group">
                        <input type="text" class="form-control" @bind="room.Name" placeholder="Room Name" />
                        <div class="input-group-append">
                            <button @onclick="GeneratePrivateRoom" class="btn btn-success">Private Room</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label text-right font-weight-bold">User Name:</label>
                <div class="col-sm-9">
                    <input type="text" class="form-control" @bind="newUser.Name" placeholder="User Name">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label text-right font-weight-bold">Role:</label>
                <div class="col-sm-9">

                    @foreach (RoleType item in Enum.GetValues(typeof(RoleType)))
                    {
                        <div class="row">
                            <div class="col mt-2">
                                <input type="radio" name="Role" id="@item" value="@item" checked=@(item==RoleType.DEV) @onchange=@(() => newUser.Role = item) />
                                <label for="@item">@item.GetEnumDescription()</label>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-12 d-flex justify-content-center">
                    <button @onclick="JoinRoom" class="btn btn-primary">Join Room</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    private Room room = new Room();
    private User newUser = new User()
    {
        Id = Guid.NewGuid(),
        Role = RoleType.DEV,
        IsActive = true
    };

    private void JoinRoom()
    {
        try
        {
            if (roomService.JoinRoom(room, newUser) == Task.CompletedTask)
            {
                sessionStorage.SetItemAsync<Room>("room", room);
                sessionStorage.SetItemAsync<User>("user", newUser);
            }
        }
        catch (Exception)
        {
            navigationManager.NavigateTo($"/error");
        }
        navigationManager.NavigateTo($"/lobby/{room.Name}/{newUser.Name}");
    }

    private void GeneratePrivateRoom() =>
        room.Name = Guid.NewGuid().ToString();
}
