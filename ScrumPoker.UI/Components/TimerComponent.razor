@using System.Timers
@using Microsoft.AspNetCore.SignalR.Client
@using ScrumPoker.Model.Model
@using ScrumPoker.Model.Enums
@implements IDisposable

<button class="btn btn-lg @(remainingMinute <= 10? "btn-danger": "btn-success") float-right" @onclick="AddTime"><i class="clock-img"></i><span class="clock-span">  @( remainingMinute > 0 ? remainingMinute : "0")</span></button>

@code {
    [Parameter] public Room room { get; set; }
    [Parameter] public HubConnection hubConnection { get; set; }
    [Parameter] public RoleType userRole { get; set; }

    private int remainingMinute { get; set; }

    private Timer timer = new(1000);

    protected override void OnInitialized()
    {
        timer.Elapsed += (sender, eventArgs) => OnTimerCallback();
        timer.Start();

        remainingMinute = Convert.ToInt32(DateTime.Now.AddMinutes(20).Subtract(DateTime.Now).TotalMinutes);
    }

    private void OnTimerCallback()
    {
        _ = InvokeAsync(() =>
        {
            var leftTime = room.EndDate.Subtract(DateTime.Now).TotalMinutes;
            remainingMinute = Convert.ToInt32(leftTime);
            StateHasChanged();
        });
    }

    private void AddTime()
    {
        if (remainingMinute <= 10 && (userRole == RoleType.SM || userRole == RoleType.PO))
            hubConnection.SendAsync("AddTimeRoom", room.Name);
    }

    public void Dispose() => timer.Dispose();
}